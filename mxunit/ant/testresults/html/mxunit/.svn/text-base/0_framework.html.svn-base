<html xmlns:lxslt="http://xml.apache.org/xslt" xmlns:stringutils="xalan://org.apache.tools.ant.util.StringUtils">
<head>
<META http-equiv="Content-Type" content="text/html; charset=US-ASCII">
<title>MXUnit Test Results: mxunit.framework</title>
<link rel="stylesheet" type="text/css" title="Style" href="../stylesheet.css">
<script type="text/javascript" language="JavaScript">
        var TestCases = new Array();
        var cur;
        
    cur = TestCases['mxunit.framework'] = new Array();
    
        cur['__MXUNITINHERITANCETREE__'] = '';
    
        cur['ADDITIONALINFORMATION'] = '';
    
        cur['ADMIN_GROUPS'] = 'Ext Web Admins,Ext Web WebAdmin Admins';
    
        cur['ADS'] = 'Complex Data Type...Not Displaying';
    
        cur['APPLICATIONNAME'] = 'admin_webadmin-lord-com-dev';
    
        cur['APPSERVER'] = 'JRun4';
    
        cur['ARCH'] = 'x86';
    
        cur['AUTH_PASSWORD'] = '';
    
        cur['AUTH_TYPE'] = '';
    
        cur['AUTH_USER'] = '';
    
        cur['BUILDNUMBER'] = '';
    
        cur['CACHE'] = 'C:\\Cache\\';
    
        cur['CAMPAIGN_MONITOR'] = 'Complex Data Type...Not Displaying';
    
        cur['CERT_COOKIE'] = '';
    
        cur['CERT_FLAGS'] = '';
    
        cur['CERT_ISSUER'] = '';
    
        cur['CERT_KEYSIZE'] = '';
    
        cur['CERT_SECRETKEYSIZE'] = '';
    
        cur['CERT_SERIALNUMBER'] = '';
    
        cur['CERT_SERVER_ISSUER'] = '';
    
        cur['CERT_SERVER_SUBJECT'] = '';
    
        cur['CERT_SUBJECT'] = '';
    
        cur['CF_TEMPLATE_PATH'] = 'C:\\LORDAdmin\\mxunit\\runner\\HttpAntRunner.cfc';
    
        cur['CFDUMPINITED'] = 'false';
    
        cur['CFID'] = '3803';
    
        cur['CFTOKEN'] = 'ee9e3a56a5786d0c-AA51CC8E-1C42-E105-ECE061F6C12E9C50';
    
        cur['CONTENT_LENGTH'] = '';
    
        cur['CONTENT_TYPE'] = '';
    
        cur['CONTEXT_PATH'] = '';
    
        cur['DEBUG'] = 'Complex Data Type...Not Displaying';
    
        cur['DEBUGARRAYWRAPPER'] = 'Complex Data Type...Not Displaying';
    
        cur['EXPIRATION'] = '{ts \'2011-12-22 15:06:58\'}';
    
        cur['FOLDER'] = '';
    
        cur['GATEWAY_INTERFACE'] = 'CGI/1.1';
    
        cur['HTTP_ACCEPT'] = '';
    
        cur['HTTP_ACCEPT_ENCODING'] = '';
    
        cur['HTTP_ACCEPT_LANGUAGE'] = '';
    
        cur['HTTP_CONNECTION'] = '';
    
        cur['HTTP_COOKIE'] = '$Version=0; CFID=3803; $Path=/, $Version=0; CFTOKEN=ee9e3a56a5786d0c-AA51CC8E-1C42-E105-ECE061F6C12E9C50; $Path=/, $Version=0; MXUNIT_SUMMARY=5%2C0%2C0%2C125; $Path=/';
    
        cur['HTTP_HOST'] = 'webadmin.lord.com.dev';
    
        cur['HTTP_REFERER'] = '';
    
        cur['HTTP_USER_AGENT'] = 'Jakarta Commons-HttpClient/3.1';
    
        cur['HTTPS'] = 'off';
    
        cur['HTTPS_KEYSIZE'] = '';
    
        cur['HTTPS_SECRETKEYSIZE'] = '';
    
        cur['HTTPS_SERVER_ISSUER'] = '';
    
        cur['HTTPS_SERVER_SUBJECT'] = '';
    
        cur['INQ'] = 'dev.inqleadmanagement.com';
    
        cur['INSTALLKIT'] = 'Native Windows';
    
        cur['KEY'] = 'MuGhsIDaz5DvehZCRInPYqUIR6mpy8VL50uY0m427HWzlnLo9wZfYAqKP413Dxq';
    
        cur['LANGUAGE_ID'] = '1';
    
        cur['LOGIN_SERVER'] = 'http://auth.lord.com.dev';
    
        cur['MAIL_SERVER'] = 'macserver1';
    
        cur['MAILCHIMP'] = 'Complex Data Type...Not Displaying';
    
        cur['MXUNIT_SUMMARY'] = '291,1,0,12672';
    
        cur['NAME'] = 'Windows 2003';
    
        cur['PATH_INFO'] = '/mxunit/runner/HttpAntRunner.cfc';
    
        cur['PATH_TRANSLATED'] = 'C:\\LORDAdmin\\mxunit\\runner\\HttpAntRunner.cfc';
    
        cur['PRODUCTLEVEL'] = 'Standard';
    
        cur['PRODUCTNAME'] = 'ColdFusion Server';
    
        cur['PRODUCTVERSION'] = '8,0,1,195765';
    
        cur['PUBLICKEY'] = 'FeK1uur3DyR6aLgsK8XmYA==';
    
        cur['QUERY_STRING'] = 'method=run&type=dir&value=/mxunit/tests/framework&recurse=false&excludes=null&packageName=mxunit.framework&componentPath=mxunit.tests.framework';
    
        cur['REMOTE_ADDR'] = '10.10.10.197';
    
        cur['REMOTE_HOST'] = '10.10.10.197';
    
        cur['REMOTE_USER'] = '';
    
        cur['REQUEST_METHOD'] = 'GET';
    
        cur['REQUIRED_GROUP_PREFIXS'] = '';
    
        cur['ROOTDIR'] = 'C:\\ColdFusion8';
    
        cur['SCRIPT_NAME'] = '/mxunit/runner/HttpAntRunner.cfc';
    
        cur['SERVER_NAME'] = 'webadmin.lord.com.dev';
    
        cur['SERVER_PORT'] = '80';
    
        cur['SERVER_PORT_SECURE'] = '0';
    
        cur['SERVER_PROTOCOL'] = 'HTTP/1.1';
    
        cur['SERVER_SOFTWARE'] = 'Microsoft-IIS/6.0';
    
        cur['SITE_ID'] = '3';
    
        cur['SUPPORTEDLOCALES'] = 'Chinese (China),Chinese (Hong Kong),Chinese (Taiwan),Dutch (Belgian),Dutch (Standard),English (Australian),English (Canadian),English (New Zealand),English (UK),English (US),French (Belgian),French (Canadian),French (Standard),French (Swiss),German (Austrian),German (Standard),German (Swiss),Italian (Standard),Italian (Swiss),Japanese,Korean,Norwegian (Bokmal),Norwegian (Nynorsk),Portuguese (Brazilian),Portuguese (Standard),Spanish (Mexican),Spanish (Modern),Spanish (Standard),Swedish,ar,ar_AE,ar_BH,ar_DZ,ar_EG,ar_IQ,ar_JO,ar_KW,ar_LB,ar_LY,ar_MA,ar_OM,ar_QA,ar_SA,ar_SD,ar_SY,ar_TN,ar_YE,be,be_BY,bg,bg_BG,ca,ca_ES,cs,cs_CZ,da,da_DK,de,de_AT,de_CH,de_DE,de_LU,el,el_CY,el_GR,en,en_AU,en_CA,en_GB,en_IE,en_IN,en_MT,en_NZ,en_PH,en_SG,en_US,en_ZA,es,es_AR,es_BO,es_CL,es_CO,es_CR,es_DO,es_EC,es_ES,es_GT,es_HN,es_MX,es_NI,es_PA,es_PE,es_PR,es_PY,es_SV,es_US,es_UY,es_VE,et,et_EE,fi,fi_FI,fr,fr_BE,fr_CA,fr_CH,fr_FR,fr_LU,ga,ga_IE,hi_IN,hr,hr_HR,hu,hu_HU,in,in_ID,is,is_IS,it,it_CH,it_IT,iw,iw_IL,ja,ja_JP,ja_JP_JP,ko,ko_KR,lt,lt_LT,lv,lv_LV,mk,mk_MK,ms,ms_MY,mt,mt_MT,nl,nl_BE,nl_NL,no,no_NO,no_NO_NY,pl,pl_PL,pt,pt_BR,pt_PT,ro,ro_RO,ru,ru_RU,sk,sk_SK,sl,sl_SI,sq,sq_AL,sr,sr_BA,sr_CS,sr_ME,sr_RS,sv,sv_SE,th,th_TH,th_TH_TH,tr,tr_TR,uk,uk_UA,vi,vi_VN,zh,zh_CN,zh_HK,zh_SG,zh_TW';
    
        cur['SYNC_SERVER'] = 'http://lordmarcommall.com.dev';
    
        cur['TEST'] = 'Complex Data Type...Not Displaying';
    
        cur['VERSION'] = '5.2';
    
        cur['WEB_SERVER_API'] = '';
    
        cur['XMLPATH'] = 'C:\\LordDesignTime\\xml\\pub\\lord\\';
    </script><script type="text/javascript" language="JavaScript">
        function displayProperties (name) {
          var win = window.open('','JUnitSystemProperties','scrollbars=1,resizable=1');
          var doc = win.document;
          doc.open();
          doc.write("<html><head><title>Properties of " + name + "</title>");
          doc.write("<style type=\"text/css\">");
          doc.write("body {font:normal 68% verdana,arial,helvetica; color:#000000; }");
          doc.write("table tr td, table tr th { font-size: 68%; }");
          doc.write("table.properties { border-collapse:collapse; border-left:solid 1 #cccccc; border-top:solid 1 #cccccc; padding:5px; }");
          doc.write("table.properties th { text-align:left; border-right:solid 1 #cccccc; border-bottom:solid 1 #cccccc; background-color:#eeeeee; }");
          doc.write("table.properties td { font:normal; text-align:left; border-right:solid 1 #cccccc; border-bottom:solid 1 #cccccc; background-color:#fffffff; }");
          doc.write("h3 { margin-bottom: 0.5em; font: bold 115% verdana,arial,helvetica }");
          doc.write("</style>");
          doc.write("</head><body>");
          doc.write("<h3>Properties of " + name + "</h3>");
          doc.write("<div align=\"right\"><a href=\"javascript:window.close();\">Close</a></div>");
          doc.write("<table class='properties'>");
          doc.write("<tr><th>Name</th><th>Value</th></tr>");
          for (prop in TestCases[name]) {
            doc.write("<tr><th>" + prop + "</th><td>" + TestCases[name][prop] + "</td></tr>");
          }
          doc.write("</table>");
          doc.write("</body></html>");
          doc.close();
          win.focus();
        }
      
      </script>
</head>
<body>
<h1>MXUnit Test Results</h1>
<table width="100%">
<tr>
<td align="left"></td><td align="right">Designed for use with <a href="http://www.junit.org/">JUnit</a> and <a href="http://ant.apache.org/">Ant</a>.</td>
</tr>
</table>
<hr size="1">
<h3>Class mxunit.framework</h3>
<table class="details" border="0" cellpadding="5" cellspacing="2" width="95%">
<tr valign="top">
<th width="80%">Name</th><th>Tests</th><th>Errors</th><th>Failures</th><th nowrap>Time(s)</th><th nowrap>Time Stamp</th><th>Host</th>
</tr>
<tr valign="top" class="Error">
<td><a title="Display all tests" href="0_framework.html">framework</a></td><td><a title="Display all tests" href="0_framework.html">291</a></td><td><a title="Display only errors" href="0_framework-errors.html">1</a></td><td>0</td><td>12.672</td><td>01/04/12 3:03:53 PM</td><td>10.10.10.197</td>
</tr>
</table>
<h2>Tests</h2>
<table class="details" border="0" cellpadding="5" cellspacing="2" width="95%">
<tr valign="top">
<th>Name</th><th>Status</th><th width="80%">Type</th><th nowrap>Time(s)</th>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddHamcrestDecorator"></a>testAddHamcrestDecorator</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testaddAssertDecorators"></a>testaddAssertDecorators</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMXUnitExtensionsAdded"></a>testMXUnitExtensionsAdded</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddFixtureDecorator"></a>testAddFixtureDecorator</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddAssertionExtensionTemplate"></a>testAddAssertionExtensionTemplate</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertMethodChainAndPrint"></a>testAssertMethodChainAndPrint</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertNotSame"></a>testAssertNotSame</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertSame"></a>testAssertSame</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIdentityHashCodes"></a>testIdentityHashCodes</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testHashEquals"></a>testHashEquals</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetHashCode"></a>testGetHashCode</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertNotSameArray"></a>testAssertNotSameArray</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testThrowWrapper"></a>testThrowWrapper</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertSameArray"></a>testAssertSameArray</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeArgumentsCFUnitTrue"></a>testNormalizeArgumentsCFUnitTrue</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsCFUnitFailure"></a>testAssertEqualsCFUnitFailure</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeArgumentsDefaultXMLDoc"></a>testNormalizeArgumentsDefaultXMLDoc</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFailNotEquals"></a>testFailNotEquals</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_fails_for_longer_expected_array"></a>assertEquals_fails_for_longer_expected_array</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertFailures"></a>testAssertFailures</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsCaseShouldPassOnSameStrings"></a>testAssertEqualsCaseShouldPassOnSameStrings</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsNumbersFailures"></a>testAssertEqualsNumbersFailures</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="whenAssertEqualsPassesExpectedAndActualValuesShouldBeEmpty"></a>whenAssertEqualsPassesExpectedAndActualValuesShouldBeEmpty</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeArgumentsCFUnitEquals"></a>testNormalizeArgumentsCFUnitEquals</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_passes_for_array_with_matching_arrays"></a>assertEquals_passes_for_array_with_matching_arrays</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFailEqualsCFUnit"></a>testFailEqualsCFUnit</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsCaseShouldFailOnDifferentCasedStrings"></a>testAssertEqualsCaseShouldFailOnDifferentCasedStrings</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="whenAssertEqualsFailsForStringsExpectedAndActualValuesShouldBePopulated"></a>whenAssertEqualsFailsForStringsExpectedAndActualValuesShouldBePopulated</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFailEquals"></a>testFailEquals</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertQueryEquals_fails_for_mismatching_queries"></a>assertQueryEquals_fails_for_mismatching_queries</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsStructsDeepComparison"></a>testAssertEqualsStructsDeepComparison</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_passes_for_matching_arrays"></a>assertEquals_passes_for_matching_arrays</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertStructEquals_fails_for_mismatching_simple_structs"></a>assertStructEquals_fails_for_mismatching_simple_structs</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_passes_for_array_with_matching_structs"></a>assertEquals_passes_for_array_with_matching_structs</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsStringsFailures"></a>testAssertEqualsStringsFailures</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertTrue"></a>testAssertTrue</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertStructEquals_succeeds_for_matching_nested_structs_with_different_key_case"></a>assertStructEquals_succeeds_for_matching_nested_structs_with_different_key_case</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeArgumentsDefaultEmptyArray"></a>testNormalizeArgumentsDefaultEmptyArray</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_fails_for_array_with_mismatching_arrays"></a>assertEquals_fails_for_array_with_mismatching_arrays</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_passes_for_array_with_matching_queries"></a>assertEquals_passes_for_array_with_matching_queries</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsNumbers"></a>testAssertEqualsNumbers</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertFalseFailure"></a>testAssertFalseFailure</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testDoubleHashError"></a>testDoubleHashError</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_fails_for_longer_actual_array"></a>assertEquals_fails_for_longer_actual_array</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_fails_for_array_with_mismatching_structs"></a>assertEquals_fails_for_array_with_mismatching_structs</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFailure"></a>testFailure</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeArgumentsDefaultTrue"></a>testNormalizeArgumentsDefaultTrue</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertEquals_fails_for_array_with_mismatching_queries"></a>assertEquals_fails_for_array_with_mismatching_queries</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertQueryEquals_succeeds_for_equal_queries"></a>assertQueryEquals_succeeds_for_equal_queries</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsStructsFailures"></a>testAssertEqualsStructsFailures</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFailNotEqualsCFUnit"></a>testFailNotEqualsCFUnit</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetStringValue"></a>testGetStringValue</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssert"></a>testAssert</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="failNotEqualsShouldAllowInvalidXMLCharsInActual"></a>failNotEqualsShouldAllowInvalidXMLCharsInActual</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsStructs"></a>testAssertEqualsStructs</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertStructEquals_succeeds_for_matching_nested_structs"></a>assertStructEquals_succeeds_for_matching_nested_structs</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeArgumentsDefaultEquals"></a>testNormalizeArgumentsDefaultEquals</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertFalse"></a>testAssertFalse</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEquals"></a>testAssertEquals</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsStrings"></a>testAssertEqualsStrings</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertStructEquals_fails_for_mismatching_nested_structs"></a>assertStructEquals_fails_for_mismatching_nested_structs</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mixedInPropertyIsOverwritten"></a>mixedInPropertyIsOverwritten</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMixinAll"></a>testMixinAll</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMixinPropertyInstanceScope"></a>testMixinPropertyInstanceScope</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMixin"></a>testMixin</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIsComponentVariableDefinedCallingFromMyself"></a>testIsComponentVariableDefinedCallingFromMyself</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetComponentVariables"></a>testGetComponentVariables</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMixinPropertyDefaultScopes"></a>testMixinPropertyDefaultScopes</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIsComponentVariableDefined"></a>testIsComponentVariableDefined</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMixinPrivate"></a>testMixinPrivate</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testCauseAFailure"></a>testCauseAFailure</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetComponentRoot"></a>testGetComponentRoot</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetComponentRootWhenGetMetaDataNameIsComponentUtils"></a>testGetComponentRootWhenGetMetaDataNameIsComponentUtils</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIsFrameworkTemplate"></a>testIsFrameworkTemplate</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetComponentRootWhenGetMetaDataNameIsNull"></a>testGetComponentRootWhenGetMetaDataNameIsNull</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetContextRootPath"></a>testGetContextRootPath</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testHasJ2EEContext"></a>testHasJ2EEContext</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetInstallRoot"></a>testGetInstallRoot</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIsCfc"></a>testIsCfc</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getMockFactoryInfoReturnsExplicitFactorInfo"></a>getMockFactoryInfoReturnsExplicitFactorInfo</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetContextRootComponent"></a>testGetContextRootComponent</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetComponentRootWhenGetMetaDataNameIsDot"></a>testGetComponentRootWhenGetMetaDataNameIsDot</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetSeparator"></a>testGetSeparator</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testThatGetComponentRootImplementsOverrideOfMxunitConfigXml"></a>testThatGetComponentRootImplementsOverrideOfMxunitConfigXml</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getMockFactoryInfoReturnsMMInfoAsDefault"></a>getMockFactoryInfoReturnsMMInfoAsDefault</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetConfigElement"></a>testGetConfigElement</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetConfigElements"></a>testGetConfigElements</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetConfigElementValue"></a>testGetConfigElementValue</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetConfigElementAttributeCollection"></a>testGetConfigElementAttributeCollection</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetVersion"></a>testGetVersion</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="readCSV_Should_ReturnQueryWithHeaderRow_WhenHeaderExists"></a>readCSV_Should_ReturnQueryWithHeaderRow_WhenHeaderExists</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="readCSV_Should_ReturnQueryWithDerivedHeaderRow_WhenNoHeader"></a>readCSV_Should_ReturnQueryWithDerivedHeaderRow_WhenNoHeader</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="readCSVToArray_Should_Return2DArray"></a>readCSVToArray_Should_Return2DArray</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="CSVToArray_Should_Create2DArrayForDataProvider"></a>CSVToArray_Should_Create2DArrayForDataProvider</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="poiUtilityShouldBeAccessibleForAllTests"></a>poiUtilityShouldBeAccessibleForAllTests</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="ExcelToArray_Should_Create2DArrayForDataProvider"></a>ExcelToArray_Should_Create2DArrayForDataProvider</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataProviderShouldRunExcelFileAsQuery"></a>dataProviderShouldRunExcelFileAsQuery</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="shouldIterateOverQueryAndExecCUTDouble"></a>shouldIterateOverQueryAndExecCUTDouble</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAccept2DArrays"></a>dataproviderShouldAccept2DArrays</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="invalidReferenceShouldThrowException"></a>invalidReferenceShouldThrowException</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldIterateOverStringArray"></a>dataproviderShouldIterateOverStringArray</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAcceptArrays"></a>dataproviderShouldAcceptArrays</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAcceptSimpleValueForNumericLoops"></a>dataproviderShouldAcceptSimpleValueForNumericLoops</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAcceptStructs"></a>dataproviderShouldAcceptStructs</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="threaLocalTest"></a>threaLocalTest</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataProviderShouldRunCSVFileAsQuery"></a>dataProviderShouldRunCSVFileAsQuery</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="peepQueryMD"></a>peepQueryMD</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="scopePeeping"></a>scopePeeping</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="methodPeep"></a>methodPeep</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldIterateOverList"></a>dataproviderShouldIterateOverList</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAcceptSimpleNumericVariablesForLoops"></a>dataproviderShouldAcceptSimpleNumericVariablesForLoops</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedExceptionTestUsingScriptMethodAndSingleName"></a>expectedExceptionTestUsingScriptMethodAndSingleName</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedMXUnitFailureShouldNotBeThrownAfterCaughtCustomException"></a>expectedMXUnitFailureShouldNotBeThrownAfterCaughtCustomException</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="suiteOfExpectedExceptionsShouldReportFailures"></a>suiteOfExpectedExceptionsShouldReportFailures</td><td>Success</td><td></td><td>0.110</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testThrowExceptionWithPackageNotationUsingAnnotation"></a>testThrowExceptionWithPackageNotationUsingAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testThrowSingleEntryNameExceptionUsingAnnotation"></a>testThrowSingleEntryNameExceptionUsingAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedSQLExceptionShouldBeCaught"></a>expectedSQLExceptionShouldBeCaught</td><td>Success</td><td></td><td>0.171</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="oldSkoolBasicError"></a>oldSkoolBasicError</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedExceptionTestUsingScriptMethodAndPackageNotation"></a>expectedExceptionTestUsingScriptMethodAndPackageNotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedExpressionExceptionShouldBeCaught"></a>expectedExpressionExceptionShouldBeCaught</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="makeSureFailureHappensAndOldStyleWorks"></a>makeSureFailureHappensAndOldStyleWorks</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="listOfExpectedExceptionsShouldBeCaught"></a>listOfExpectedExceptionsShouldBeCaught</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="shouldCatchMissingArgumentException"></a>shouldCatchMissingArgumentException</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedExceptionShouldSetPropertyInTestCase"></a>expectedExceptionShouldSetPropertyInTestCase</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSomethingElse"></a>testSomethingElse</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSomething"></a>testSomething</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSomethingElse2"></a>testSomethingElse2</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIsEqualTo"></a>testIsEqualTo</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testContainsTheString"></a>testContainsTheString</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testContainsAtLeastOneScript"></a>testContainsAtLeastOneScript</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testContainsAtLeastOneStylesheet"></a>testContainsAtLeastOneStylesheet</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testContainsTitleTag"></a>testContainsTitleTag</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="notinstalledColdMockShouldThrowNotInstalledException2"></a>notinstalledColdMockShouldThrowNotInstalledException2</td><td>Success</td><td></td><td>0.390</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getMockFactoryIsInvokedOnce"></a>getMockFactoryIsInvokedOnce</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getMockFactoryReturnsMightyMockByDefault"></a>getMockFactoryReturnsMightyMockByDefault</td><td>Success</td><td></td><td>0.063</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="notinstalledMockFrameworkShouldThrowNotInstalledException"></a>notinstalledMockFrameworkShouldThrowNotInstalledException</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mockWithActualObjectShouldCreateTypeSafeMightyMockObject"></a>mockWithActualObjectShouldCreateTypeSafeMightyMockObject</td><td>Success</td><td></td><td>0.062</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mockExplicitFastShouldReturnFastMightyMockObject"></a>mockExplicitFastShouldReturnFastMightyMockObject</td><td>Success</td><td></td><td>0.063</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mockNoNameShouldReturnMightyMockObject"></a>mockNoNameShouldReturnMightyMockObject</td><td>Success</td><td></td><td>0.062</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="notinstalledMockBoxShouldThrowNotInstalledException"></a>notinstalledMockBoxShouldThrowNotInstalledException</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mockWithTypeSafeShouldCreateTypeSafeMightyMockObject"></a>mockWithTypeSafeShouldCreateTypeSafeMightyMockObject</td><td>Success</td><td></td><td>0.172</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mockWithPartialShouldThrow"></a>mockWithPartialShouldThrow</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="$getMM"></a>$getMM</td><td>Success</td><td></td><td>0.062</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="notregisteredMockFrameworkShouldThrowNotResgiteredException"></a>notregisteredMockFrameworkShouldThrowNotResgiteredException</td><td>Success</td><td></td><td>0.063</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="notinstalledMockBoxShouldThrowNotInstalledException2"></a>notinstalledMockBoxShouldThrowNotInstalledException2</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="emptyConstructorShouldGenerateMM"></a>emptyConstructorShouldGenerateMM</td><td>Success</td><td></td><td>0.062</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="mockWithNameShouldReturnNamedMightyMockObject"></a>mockWithNameShouldReturnNamedMightyMockObject</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsTypeOf"></a>testAssertIsTypeOf</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsXMLDoc"></a>testAssertIsXMLDoc</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertIsExactTypePassesForExactType"></a>assertIsExactTypePassesForExactType</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsEmptyStruct"></a>testAssertIsEmptyStruct</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertIsTypeOfFailsForBogusType"></a>assertIsTypeOfFailsForBogusType</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertEqualsWithTolerance"></a>testAssertEqualsWithTolerance</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsQuery"></a>testAssertIsQuery</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsArray"></a>testAssertIsArray</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertIsTypeOfPassesForCompleteAncestry"></a>assertIsTypeOfPassesForCompleteAncestry</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertIsExactTypeOfFailsForSuperclass"></a>assertIsExactTypeOfFailsForSuperclass</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsDefined"></a>testAssertIsDefined</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsEmpty"></a>testAssertIsEmpty</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsStruct"></a>testAssertIsStruct</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsEmptyQuery"></a>testAssertIsEmptyQuery</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertIsTypeOfFailsForIncorrectType"></a>assertIsTypeOfFailsForIncorrectType</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="assertIsTypeOfPassesForInterfaces"></a>assertIsTypeOfPassesForInterfaces</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAssertIsEmptyArray"></a>testAssertIsEmptyArray</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicNonExistentMethod"></a>testMakePublicNonExistentMethod</td><td>Success</td><td></td><td>0.046</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicNoArgMethod"></a>testMakePublicNoArgMethod</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicArray"></a>testMakePublicArray</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicArray2"></a>testMakePublicArray2</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicNamedArgsAndNamedPublicMethod"></a>testMakePublicNamedArgsAndNamedPublicMethod</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicAllArgsPassed"></a>testMakePublicAllArgsPassed</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicObjectWithInit"></a>testMakePublicObjectWithInit</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicObjectNoArg"></a>testMakePublicObjectNoArg</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicObjectVoid"></a>testMakePublicObjectVoid</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicArgDefault"></a>testMakePublicArgDefault</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicSuperClassMethod"></a>testMakePublicSuperClassMethod</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSanity"></a>testSanity</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicSuperClassPackageMethod"></a>testMakePublicSuperClassPackageMethod</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicNonNamedArgs"></a>testMakePublicNonNamedArgs</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicRequiredArgOnly"></a>testMakePublicRequiredArgOnly</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicVoid"></a>testMakePublicVoid</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicNoThirdArg"></a>testMakePublicNoThirdArg</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicNoReturnType"></a>testMakePublicNoReturnType</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicObject"></a>testMakePublicObject</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicSuperClassMethodWithSubclassWithNoFunctions"></a>testMakePublicSuperClassMethodWithSubclassWithNoFunctions</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicMissingRequiredArg"></a>testMakePublicMissingRequiredArg</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetQueryResults"></a>testGetQueryResults</td><td>Success</td><td></td><td>0.094</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMetaData"></a>testMetaData</td><td>Success</td><td></td><td>0.046</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testPurgeSuitePool"></a>testPurgeSuitePool</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testPurgeStaleTests"></a>testPurgeStaleTests</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testEndTestRun"></a>testEndTestRun</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testStartTestRun"></a>testStartTestRun</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetObjectNotInCache"></a>testGetObjectNotInCache</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetObjectWhenCachePurged"></a>testGetObjectWhenCachePurged</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetComponentMethods"></a>testGetComponentMethods</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetServerType"></a>testGetServerType</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testPing"></a>testPing</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getFrameworkVersionShouldReturnVersion"></a>getFrameworkVersionShouldReturnVersion</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testExecuteTestCaseWithComplexErrorTypeError"></a>testExecuteTestCaseWithComplexErrorTypeError</td><td>Success</td><td></td><td>0.625</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getFrameworkDateShouldReturnDateAndNotTime"></a>getFrameworkDateShouldReturnDateAndNotTime</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testExecuteTestCase"></a>testExecuteTestCase</td><td>Success</td><td></td><td>0.156</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testExecuteTestCaseWithFailure"></a>testExecuteTestCaseWithFailure</td><td>Success</td><td></td><td>0.110</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="startTestRunShouldReturnKey"></a>startTestRunShouldReturnKey</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testTagSoup"></a>testTagSoup</td><td>Success</td><td></td><td>0.484</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testThatCallToSuperReturnsCorrectString"></a>testThatCallToSuperReturnsCorrectString</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getOverwrittenAnnotationReturnsValueFromTestCaseUsingJustName"></a>getOverwrittenAnnotationReturnsValueFromTestCaseUsingJustName</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetRunnableMethodsSimple"></a>testGetRunnableMethodsSimple</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsValueFromTestCaseUsingMxunitNamespace"></a>getAnnotationReturnsValueFromTestCaseUsingMxunitNamespace</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testThatThisExtendsTestCaseTest"></a>testThatThisExtendsTestCaseTest</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsValueFromTestCaseUsingJustName"></a>getAnnotationReturnsValueFromTestCaseUsingJustName</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetRunnableMethodsInheritance"></a>testGetRunnableMethodsInheritance</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="cfthreadsInTestAreNotAcceptableTests"></a>cfthreadsInTestAreNotAcceptableTests</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getSomeValue"></a>getSomeValue</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectMethodPassthroughSanityCheck"></a>testInjectMethodPassthroughSanityCheck</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="setUpAndTearDownAreNotAcceptableTests"></a>setUpAndTearDownAreNotAcceptableTests</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectMethodPassthrough"></a>testInjectMethodPassthrough</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsValueFromTestCaseUsingMxunitNamespace"></a>getAnnotationReturnsValueFromTestCaseUsingMxunitNamespace</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectMethodPassthroughOverwriteExistingButDifferentName"></a>testInjectMethodPassthroughOverwriteExistingButDifferentName</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAllowMXUnitNamespacedAnnotation"></a>dataproviderShouldAllowMXUnitNamespacedAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="$invokeBeforeTestsShouldSetSimpleValue"></a>$invokeBeforeTestsShouldSetSimpleValue</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetRunnableMethodsHyphenInName"></a>testGetRunnableMethodsHyphenInName</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testWithJustNameAnnotation"></a>testWithJustNameAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedExceptionWithMXUnitNamespaceShouldWork"></a>expectedExceptionWithMXUnitNamespaceShouldWork</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicPassthroughSanityCheck"></a>testMakePublicPassthroughSanityCheck</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsValueUsingJustName"></a>getAnnotationReturnsValueUsingJustName</td><td>Success</td><td></td><td>0.015</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsValueUsingMxunitNamespace"></a>getAnnotationReturnsValueUsingMxunitNamespace</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectPropertyWorksForNonExistentMethods"></a>testInjectPropertyWorksForNonExistentMethods</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectPropertyWorksForMethodsCalledIndirectly"></a>testInjectPropertyWorksForMethodsCalledIndirectly</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectPropertyWithScope"></a>testInjectPropertyWithScope</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testWithNoAnnotation"></a>testWithNoAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectPropertyWorksForMethodsCalledDirectly"></a>testInjectPropertyWorksForMethodsCalledDirectly</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="publicFunctionsAreAcceptableTests"></a>publicFunctionsAreAcceptableTests</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectMethodPassthroughOverwriteExisting"></a>testInjectMethodPassthroughOverwriteExisting</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testRestoreMethod"></a>testRestoreMethod</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetRunnableMethodsSimple"></a>testGetRunnableMethodsSimple</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsDefaultValueIfNoAnnotationFound"></a>getAnnotationReturnsDefaultValueIfNoAnnotationFound</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="falseTestAttribute_IsNotAcceptableTest"></a>falseTestAttribute_IsNotAcceptableTest</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="expectedExceptionWithJustNameShouldWork"></a>expectedExceptionWithJustNameShouldWork</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationOnNonExistentMethodThrowsExectedException"></a>getAnnotationOnNonExistentMethodThrowsExectedException</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="privateAndPackageAreNotAcceptableTests"></a>privateAndPackageAreNotAcceptableTests</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getAnnotationReturnsValueFromTestCaseUsingJustName"></a>getAnnotationReturnsValueFromTestCaseUsingJustName</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testInjectPropertyAlreadyExists"></a>testInjectPropertyAlreadyExists</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testMakePublicPassthrough"></a>testMakePublicPassthrough</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="dataproviderShouldAllowNameOnlyAnnotation"></a>dataproviderShouldAllowNameOnlyAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testWithMxunitNamespaceAnnotation"></a>testWithMxunitNamespaceAnnotation</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testDecoratorWrappingTest"></a>testDecoratorWrappingTest</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="someTest"></a>someTest</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSetPackage"></a>testSetPackage</td><td>Success</td><td></td><td>0.093</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testEndTest"></a>testEndTest</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddError"></a>testAddError</td><td>Success</td><td></td><td>0.078</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetResults"></a>testGetResults</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetPackage"></a>testGetPackage</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testConstructTagContextElements"></a>testConstructTagContextElements</td><td>Success</td><td></td><td>0.140</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="normalizeQueryStringShouldIgnoreComplexObjects"></a>normalizeQueryStringShouldIgnoreComplexObjects</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddTrace"></a>testAddTrace</td><td>Success</td><td></td><td>0.063</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetFailures"></a>testGetFailures</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetResultsAsStruct"></a>testGetResultsAsStruct</td><td>Success</td><td></td><td>0.187</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddContent"></a>testAddContent</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddSuccess"></a>testAddSuccess</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetQueryResults"></a>testGetQueryResults</td><td>Success</td><td></td><td>0.079</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetResultsOutput"></a>testGetResultsOutput</td><td>Success</td><td></td><td>0.046</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetInstallRoot"></a>testGetInstallRoot</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testNormalizeQueryString"></a>testNormalizeQueryString</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testStartTest"></a>testStartTest</td><td>Success</td><td></td><td>0.046</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetSuccesses"></a>testGetSuccesses</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetResultsAsStructMultipleComponents"></a>testGetResultsAsStructMultipleComponents</td><td>Success</td><td></td><td>0.219</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testCloseResults"></a>testCloseResults</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testTestResult"></a>testTestResult</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSetDebug"></a>testSetDebug</td><td>Success</td><td></td><td>0.031</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddProcessingTime"></a>testAddProcessingTime</td><td>Success</td><td></td><td>0.046</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetDebug"></a>testGetDebug</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddFailure"></a>testAddFailure</td><td>Success</td><td></td><td>0.047</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAdd"></a>testAdd</td><td>Success</td><td></td><td>0.094</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="settingMockingFrameworkInTestSuiteUsesThatFramework"></a>settingMockingFrameworkInTestSuiteUsesThatFramework</td><td>Success</td><td></td><td>0.062</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testGetMapReturnsMap"></a>testGetMapReturnsMap</td><td>Success</td><td></td><td>0.094</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testRunSuiteRemote"></a>testRunSuiteRemote</td><td>Success</td><td></td><td>0.078</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testAddOneTestMethod"></a>testAddOneTestMethod</td><td>Success</td><td></td><td>0.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testRun"></a>testRun</td><td>Success</td><td></td><td>0.016</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testTest"></a>testTest</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="getVersionInfoShouldReturnStructWithBuildNumberAndDate"></a>getVersionInfoShouldReturnStructWithBuildNumberAndDate</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testSSLUrl"></a>testSSLUrl</td><td>Success</td><td></td><td>1.171</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFindTitleInUrl"></a>testFindTitleInUrl</td><td>Success</td><td></td><td>1.032</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFindNode1_WithPreBuiltXMLObject"></a>testFindNode1_WithPreBuiltXMLObject</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testWrapScriptTagInCDATA"></a>testWrapScriptTagInCDATA</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFile"></a>testFile</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testBuildXmlDom"></a>testBuildXmlDom</td><td>Success</td><td></td><td>1.813</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFindNode2"></a>testFindNode2</td><td>Success</td><td></td><td>0.109</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFindNode1"></a>testFindNode1</td><td>Success</td><td></td><td>0.063</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testIsWrapped"></a>testIsWrapped</td><td>Success</td><td></td><td>0.000</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFindMXUnitInTitle"></a>testFindMXUnitInTitle</td><td>Success</td><td></td><td>0.562</td>
</tr>
<tr valign="top" class="TableRowColor">
<td><a name="testFindGoogleInTitle"></a>testFindGoogleInTitle</td><td>Success</td><td></td><td>0.422</td>
</tr>
<tr valign="top" class="Error">
<td><a name="DynamicTestCaseGenerationTest"></a>DynamicTestCaseGenerationTest</td><td>Error</td><td>Template<br>
<br>
<code>Invalid CFML construct found on line 3 at column 11. at C:\LORDAdmin\mxunit\tests\framework\DynamicTestCaseGenerationTest.cfc:3 at C:\LORDAdmin\mxunit\framework\TestSuite.cfc:108 at C:\LORDAdmin\mxunit\runner\DirectoryTestSuite.cfc:29 at C:\LORDAdmin\mxunit\runner\HttpAntRunner.cfc:27</code></td><td>0.000</td>
</tr>
</table>
<div class="Properties">
<a href="javascript:displayProperties('mxunit.framework');">
                    Properties &raquo;
                </a>
</div>
</body>
</html>
